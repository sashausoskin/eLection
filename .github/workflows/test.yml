name: Run tests
run-name: Running unit and end-to-end tests - ${{ github.event.head_commit.message }}
on: 
  push:
  release:
    types: [created]
jobs:
  unit_tests:
      name: Run unit tests
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4.1.5
        - name: Setup Node
          uses: actions/setup-node@v4.0.2
          with:
            node-version: 20
        - name: Install backend dependencies
          working-directory: ./backend
          run: npm install
        - name: Build schemas
          working-directory: ./backend
          run: npm run build:schema
        - name: Check linting in backend
          working-directory: ./backend
          run: npm run lint
        - name: Run backend unit tests
          working-directory: ./backend
          run: npm run test:coverage
        - name: Install frontend dependencies
          working-directory: ./frontend
          run: npm install
        - name: Check linting in frontend
          working-directory: ./frontend
          run: npm run lint
        - name: Run frontend unit tests
          working-directory: ./frontend
          run: npm test
        - name: Start frontend & backend servers
          env:
            CORS_ORIGIN: http://localhost:4173
            VITE_BACKEND_URL: http://localhost:3000
            VITE_SOCKET_URL: http://localhost:3000
            VITE_SOCKET_PATH: /socket.io/
          run: |
              cd backend 
              npm run start:test &
              cd ../frontend
              npm run build
              npm run preview &
        - name: Cypress run
          run: npm run test:e2e
          working-directory: ./frontend
        - name: Upload Cypress screenshots
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: cypress-screenshots
            path: frontend/cypress/screenshots
            if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
        - name: Upload backend coverage reports to Codecov
          uses: codecov/codecov-action@v4.0.1
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            working-directory: ./backend
               
